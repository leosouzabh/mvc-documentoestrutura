{"version":3,"sources":["../../app-es6/controller/DocEstrutura.js"],"names":["currentInstance","DocEstrutura","_mapaListagemTotalElementos","Map","jsonEstrutura","readOnlyFields","_objEstrutura","JSON","parse","_readOnlyFields","$","empty","_renderAgregador","_newDadosIndexado","geraJson","idContainer","agregador","dadosIndexado","write","agregadorView","build","wr","html","idPai","idBuild","_renderItens","idContainerItens","itens","listagem","builder","getId","id","totalItens","_getTotalItensListagem","listagemView","_bindEvents","idxEl","idWrapItem","buildWrapItemId","idListagem","listaItens","forEach","item","tipo","AGREGADOR","LISTAGEM","_renderListagem","htmlRender","TEXTO","texto","LISTA","lista","NUMERO","numero","MOEDA","moeda","DATA","data","console","error","indice","botao","target","novoItemService","geraNovoItem","get","set","remove","reorganizaIndiceIdsListagem","each","children","i","find","i2","input","arr","attr","split","join","indiceNovoElemento","off","on","evt","adicionaItemLista","removerItens","docEstruturaController"],"mappings":"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","file":"DocEstrutura.js","sourcesContent":["import {AgregadorBuilder} from '../builder/grupo/AgregadorBuilder';\r\nimport {ListagemBuilder}  from '../builder/grupo/ListagemBuilder';\r\n\r\nimport {WriterService} from '../service/WriterService';\r\nimport {RenderService} from '../service/RenderService';\r\nimport {NovoItemService} from '../service/NovoItemService';\r\nimport {GeraJsonService} from '../service/GeraJsonService';\r\n\r\n\r\nimport {Elemento} from '../constantes/Elemento';\r\n\r\nimport {JsonUtil} from '../util/JsonUtil';\r\n\r\nclass DocEstrutura{\r\n    \r\n    constructor(){\r\n        this._mapaListagemTotalElementos = new Map();        \r\n    }\r\n    \r\n    \r\n    iniciaConstrucao(jsonEstrutura, readOnlyFields){\r\n        this._objEstrutura = JSON.parse(jsonEstrutura);\r\n        this._readOnlyFields = readOnlyFields;\r\n        \r\n        $(\"#container-form\").empty();\r\n        this._renderAgregador('container-form', this._objEstrutura, this._newDadosIndexado(null, 0));\r\n    }     \r\n    \r\n    montaJson(){\r\n        new GeraJsonService().geraJson();\r\n    }\r\n        \r\n\r\n    _renderAgregador(idContainer, agregador, dadosIndexado){\r\n        let write = new WriterService(idContainer);\r\n        let agregadorView = new AgregadorBuilder(agregador).build(dadosIndexado);\r\n        write.wr(agregadorView.html);        \r\n        \r\n        dadosIndexado.idPai = agregadorView.idBuild;\r\n        this._renderItens(agregadorView.idContainerItens, agregador.itens, dadosIndexado);\r\n    }\r\n        \r\n    \r\n    _renderListagem(idContainer, listagem, dadosIndexado){\r\n        let write = new WriterService(idContainer);\r\n        let builder = new ListagemBuilder(listagem, dadosIndexado);\r\n        \r\n        let idBuild = builder.getId(listagem.id, dadosIndexado);\r\n        var totalItens = this._getTotalItensListagem(idBuild);\r\n        \r\n        let listagemView = builder.build(this._readOnlyFields, totalItens, dadosIndexado);\r\n        write.wr(listagemView.html);\r\n        \r\n        this._bindEvents();\r\n        \r\n        \r\n        for (var idxEl=0; idxEl<totalItens; idxEl++){\r\n            let idWrapItem = builder.buildWrapItemId(idxEl);\r\n            this._renderItens(idWrapItem, listagem.itens, this._newDadosIndexado(listagemView.idListagem,idxEl));\r\n\t\t}        \r\n    }\r\n    \r\n    _renderItens(idContainer, listaItens, dadosIndexado){\r\n        listaItens.forEach(item => {            \r\n            if ( item.tipo == Elemento.tipo.AGREGADOR ){\r\n                this._renderAgregador(idContainer, item, dadosIndexado);\r\n            \r\n            } else  if ( item.tipo == Elemento.tipo.LISTAGEM ){\r\n                this._renderListagem(idContainer, item, dadosIndexado);\r\n\r\n            } else {\r\n                let htmlRender = new RenderService(item, this._readOnlyFields, dadosIndexado, new WriterService(idContainer));\r\n                 \r\n                switch (item.tipo) {\r\n                case Elemento.tipo.TEXTO:\r\n                    htmlRender.texto();\r\n                    break;\r\n                        \r\n                case Elemento.tipo.LISTA:\r\n                    htmlRender.lista();\r\n                    break;\r\n                    \r\n                case Elemento.tipo.NUMERO:\r\n                    htmlRender.numero();\r\n                    break;\r\n                        \r\n                case Elemento.tipo.MOEDA:\r\n                    htmlRender.moeda(); \r\n                    break;\r\n                        \r\n                case Elemento.tipo.DATA:\r\n                    htmlRender.data();\r\n                    break;\r\n                        \r\n                default:\r\n                    console.error(\"Desculpe, estamos sem nenhuma \" + item.tipo + \".\");\r\n                }\r\n                \r\n            }\r\n\r\n        });\r\n    }\r\n    \r\n    \r\n    _newDadosIndexado(idPai, indice){\r\n        return {idPai:idPai, indice:indice}\r\n    } \r\n    \r\n    \r\n    adicionaItemLista(botao){\r\n        let idBuild = $(botao.target).data('id-listagem');\r\n        let novoItemService = new NovoItemService(idBuild);\r\n        novoItemService.geraNovoItem();\r\n        this._bindEvents();\r\n        \r\n\t};\r\n        \r\n    removerItens(idListagem, indice){\r\n        var idContainer = \"wrap-item-\"+idListagem+\"-\"+indice;\r\n\t\tvar totalItens = this._mapaListagemTotalElementos.get(idListagem);\r\n\t\tthis._mapaListagemTotalElementos.set(idListagem, totalItens-1)\r\n        \r\n\t\t$(\"#\"+idContainer).remove();\r\n\t\tthis.reorganizaIndiceIdsListagem(idListagem);\r\n    }\r\n    \r\n    reorganizaIndiceIdsListagem(idListagem){\r\n\t\t$.each($(\"#container-\"+idListagem).children(), function(i, item){\r\n\t\t\t$.each($(item).find(\".form-control\"), function(i2, input){\r\n\t\t\t\tvar arr = $(input).attr('id').split(\"-\");\r\n\t\t\t\tarr[1] = i;\r\n\t\t\t\t$(input).attr('id', arr.join('-'));\r\n\t\t\t} )\r\n\t\t})\t\t\t\t\r\n\t}\r\n\r\n    \r\n    \r\n    _getTotalItensListagem(idListagem){\r\n        if ( this._mapaListagemTotalElementos.get(idListagem) == null ){\r\n\t\t\tthis._mapaListagemTotalElementos.set(idListagem, 1);\r\n\t\t} \t\t\r\n\t\treturn this._mapaListagemTotalElementos.get(idListagem);\r\n    }\r\n    \r\n    _getProximoSequencial(idListagem){\r\n        var indiceNovoElemento = this._mapaListagemTotalElementos.get(idListagem);\r\n\t\tthis._mapaListagemTotalElementos.set(idListagem, indiceNovoElemento+1);\r\n        return indiceNovoElemento;\r\n    }\r\n    \r\n    \r\n    _bindEvents(){\r\n        $('.btn-novo-item').off('click');\r\n        $('.btn-novo-item').on('click', (evt)=> this.adicionaItemLista(evt) );\r\n        \r\n        $('.btn-delete-item').off('click');\r\n        $('.btn-delete-item').on('click', (evt)=> this.removerItens(evt) );\r\n    }\r\n    \r\n\r\n}\r\n\r\nlet docEstruturaController = new DocEstrutura();\r\n\r\nexport function currentInstance(){\r\n    return docEstruturaController;\r\n}"]}